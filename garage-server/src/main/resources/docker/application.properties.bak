#server
server.port=18106
server.contextPath=/experience
server.selfUrl=http://nginxd/experience
spring.http.multipart.max-file-size=100Mb
spring.http.multipart.max-request-size=1000Mb
env=docker23
#database config
spring.datasource.url=jdbc:mysql://192.168.145.44:5506/rentcar_docker23?useUnicode=true&amp;amp;characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=mysql
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.test-on-borrow=true
spring.datasource.validation-query=select 1
spring.datasource.initial-size=50
spring.datasource.max-active=50
spring.datasource.max-idle=50
spring.datasource.min-idle=50
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.session.store-type=none
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

#msgCenter config
msgCenter.url=http://192.168.144.23:8428/mc/yxMessage/send

#shiro cas config
shiro.casServerUrlPrefix=http://casServerd:8080/casserver/
shiro.casService=http://nginxd/experience/shiro-cas
shiro.casServerList=http://192.168.144.23:18106/experience/shiro-cas
server.env.url=http://liferayd:8280
#usc config
usc.getAdjunctByDomainAccountAndSystemId=http://nuscWebd:8406/nusc-web/api/otherService/getAdjunctByDomainAccountAndSystemId
usc.findResourceByUser=http://nuscWebd:8406/nusc-web/api/otherService/findResourceByUser
usc.getPermissionByDomainAccountAndSystemId1=http://nuscWebd:8406/nusc-web/api/userDubboService/getPermissionByDomainAccountAndSystemId1
usc.getUsersInfoByRoleId=http://nuscWebd:8406/nusc-web/api/userDubboService/getUsersInfoByRoleId?roleId=
usc.getUserInfoByDomainAccount=http://nuscWebd:8406/nusc-web/api/userDubboService/getUserInfoByDomainAccount?domainAccount=
usc.nuscWebApi=http://nuscWebd:8406/nusc-web/api/
systemId=10106
#rabbitMQ配置
#指定client连接到的server的地址，多个以逗号分隔.
spring.rabbitmq.addresses=rabbitMqd:5672
spring.rabbitmq.username=rentcar_admin
spring.rabbitmq.password=rentcar
spring.rabbitmq.listener.simple.auto-startup=true
spring.rabbitmq.virtual-host=rentcar_docker

spring.rabbitmq.channel.addresses=rabbitMqd:5672
spring.rabbitmq.channel.username=channel_admin
spring.rabbitmq.channel.password=channel_admin
#redis config
spring.redis.cluster.nodes=redisClusterd:7001,redisClusterd:7002,redisClusterd:7003,redisClusterd:7004,redisClusterd:7005,redisClusterd:7006
#车型库接口
carStyleUrl=http://192.168.144.23:18121/vehicletypelib-web/api
#basedata config
basedataURL=http://basedataWebd:18101/basedata/api

getChannelUsersByChannelId=http://192.168.144.23:18100/yidaitong-web/api/channelUser/getChannelUsersByChannelId
getChannelIdUrl=http://192.168.144.23:18100/yidaitong-web/api/channelUser/getChannelInfoByUserName
#进销存接口
rentcarAllURL=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/getFreeCars
rentcarAPIURL=http://rentcarWebd:18086/rentcar-web/api
rentcarPlanCarUrl=http://rentcarWebd:18086/rentcar-web/api/RcExperienceShopPendingService/getPendingCars
rentcarBatchLockPlanCarUrl=http://rentcarWebd:18086/rentcar-web/api/RcExperienceShopPendingService/lockPendingCars
rentcarBatchUnLockPlanCarUrl=http://rentcarWebd:18086/rentcar-web/api/RcExperienceShopPendingService/unLockPendingCars

rentcarPageURL=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/pageQueryFreeCars
rentcarFrozenURL=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/frozenVehicleOfVins
rentcarUnFrozenURL=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/unfreezeVehicleOfVins
rentcarInventoryURL=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/QueryInventoryPlace
rentcarInventoryByChannelIdURL=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/queryGarageInfoByChannelId
rentcarBranchURL=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/QueryInventoryBranch
rentcarFrozenV2URL=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/frozenVehicleByDTOs
rentcarWorkFlow=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/licensePlateIntent
rentcarQueryStateByVins=http://rentcarWebd:18086/rentcar-web/api/experienceShopService/queryVehicleDetailListByListVin
rentcarQueryPurchaseDate=http://rentcarWebd:18086/rentcar-web/api/RcExperienceShopPendingService/queryPurchaseDate
#渠道api接口地址
ChannelAPIURL=http://channelWebd:18094/channel-web/api

#job_center rabbitmq info
rabbitmq.servers.inve=rabbitMqd:5672
rabbitmq.username.inve=rabbitadm
rabbitmq.password.inve=admin

#易车车型图片地址
yiche.carImgURL=http://imgsvr.bitauto.com/photo/getseriallist.aspx
depositNameUrl=/channelBussinessRPCService/pageQueryChannelFixInfoByComplexParam
#\u83B7\u53D6\u6240\u6709\u7701\u4EFD
getProvincesUrl=/basicRegion/getProvinces
#\u83B7\u53D6\u6240\u6709\u57CE\u5E02
getSubRegionsUrl=/basicRegion/getSubRegions
#\u83B7\u53D6\u6240\u6709\u7528\u6237\u4FE1\u606F
getAllUserInfoUrl=http://192.168.144.23:8406/nusc-web/api/userDubboService/getAppUserInfo

#点击自动匹配按钮间隔时间（单位：秒）
matchAutoTime=60
#防止自动匹配方法执行失败而设置自动删除时间（单位：秒）
matchAutoStartingTime=300

#用户岗位 岗位配置后替换为正确的值
operate=733
lease=734
#租赁集采
leaseJiCai=732
planPost=677
#体验店运营审批岗
experience.role.estoreAuditRole=772
#非体验店运营审批岗
experience.role.otherStoreAuditRole=773
#分公司总经理角色
experience.role.branRole=4362
#区域总监角色
experience.role.areaRole=4361

#订单处理分总审批
experience.role.orderdeal.branRole=4357
#订单处理区总审批
experience.role.orderdeal.areaRole=4358
#订单处理店面运营部VP审批
experience.role.orderdeal.vpRole=4359
#预测审核岗
experience.role.reportAudit=4360
#预测审核抄送人
experience.role.reportAuditCCMail=4363
#渠道审核岗
experience.role.auditChannel=4364

fileServiceURL=http://fileserverWebd:18099
downloadfileServiceURL=http://192.168.145.34/


#基础平台接口
#基础平台获取银行列表地址
getYxBankListUrl=http://basedataWebd:18101/basedata/api/bankAbbreviation/getYxBankList
#基础平台获取开户行信息地址
getBankAccountUrl=http://basedataWebd:18101/basedata/api/bankAccount/yxBankAccountListByParam


#产品中心
productCenterUrl=http://192.168.144.23:18077/pdc-web/api
#alix
alixProductUrl=http://192.168.145.117:8081/tox
#短信参数，在消息中心配置的
smsChannelType=sms_experience
smsSenderChannel=sms_wxxsxx_yxjt

#预测上报发送邮件类型(区分那个环境)
reportMailTitle=(This is a test mail. Please ignore it.-docker)